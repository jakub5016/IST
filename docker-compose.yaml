services:
  kafka:
    image: apache/kafka:latest
    ports:
      - "9092:9092"
    environment: 
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_PROCESS_ROLES=broker,controller 
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_LISTENERS=INTERNAL://0.0.0.0:29092,CONTROLLER://kafka:29093,EXTERNAL://0.0.0.0:9092
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka:29092,EXTERNAL://localhost:9092,CONTROLLER://kafka:29093
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT, EXTERNAL:PLAINTEXT 
      - KAFKA_BROKER_ID=1
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka:29093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_NODE_ID=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=false
      - KAFKA_NUM_PARTITIONS=1
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL  
    networks:
      - iot

  api-gateway:
    build: ./api_gateway/
    ports:
      - "8000:8000"
    environment:
      - KAFKA_BROKER=kafka:29092
      - REQUEST_TOPIC_PAYMENT=${REQUEST_TOPIC_PAYMENT}
      - RESPONSE_TOPIC_ORDERS=${RESPONSE_TOPIC_ORDERS}
    depends_on:
      - kafka
    networks:
      - iot
  payment-gateway:
    build: ./payment_gateway/
    environment:
      - KAFKA_BROKER=kafka:29092
      - client_id=${client_id}
      - client_secret=${client_secret}
      - REQUEST_TOPIC_PAYMENT=${REQUEST_TOPIC_PAYMENT}
      - RESPONSE_TOPIC_ORDERS=${RESPONSE_TOPIC_ORDERS}
    depends_on:
      - kafka
    networks:
      - iot
  auth-service:
    build: ./auth/
    environment:
      - KAFKA_BROKER=kafka:29092
      - client_id=${client_id}
      - client_secret=${client_secret}
      - REQUEST_TOPIC_REGISTER=${REQUEST_TOPIC_REGISTER}
      - RESPONSE_TOPIC_REGISTER=${RESPONSE_TOPIC_REGISTER}
      - REQUSET_TOPIC_AUTH=${REQUSET_TOPIC_AUTH}
      - RESPONSE_TOPIC_AUTH=${RESPONSE_TOPIC_AUTH}
    depends_on:
      - kafka
    networks:
      - iot
networks:
  iot:
    driver: bridge
